Copyright (C) 2020 Blidzy

This file is part of lbl++ : you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

_________________________

--LBL++ Documentation--

LBL++ is an interpreted language, so, the execution of an LBL++ program need a build of the interpreter (Lbl++ source code) 
Run a LBL++ program:
$ [PathOfYourBuild] file.lblpp

An LineByLine++ program have 6 variables: A, B, C, D, E and F.

DIS[VAR] -> print the value of a variable.
Example: DISA
DIC[VAR] -> print the ascii value of a variable.
Example: DICC
INC[VAR] -> increment the value of a variable.
Example: INCF
DEC[VAR] -> decrement the value of a variable.
Example: DECB
CLS[VAR] -> put the value of a variable to 0.
Example: CLSD
EQ[VAR1][VAR2] -> put the value of [VAR2] as the value of [VAR1]
Example: EQDA
ENDL -> print a \n
READ[VAR] -> read a char by the standard input and put it as the value of [VAR]
Example -> READA
ADD[VAR1][VAR2]
